C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
C0
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
C0
C1
C2
C3
C4
C5
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:10) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c((C0, C1, C2, C3, C4, C5))
c(C0, C1, C2, C3, C4, C5)
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:1) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c(C0, C1, C2, C3, C4, C5)
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:2) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c(C0, C1, C2, C3, C4, C5)
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:5) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c(C0, C1, C2, C3, C4, C5)
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:3) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c(C0, C1, C2, C3, C4, C5)
.Machine$double.eps
.Machine$double.eps=2.220446e-30
.Machine$double.eps
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:3) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c(C0, C1, C2, C3, C4, C5)
typeof(1)
typeof(1L)
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:2) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c(C0, C1, C2, C3, C4, C5)
sum(c(C0, C1, C2, C3, C4, C5))
typeof(C0)
round(C0,8)
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
c(C0, C1, C2, C3, C4, C5)
C0 = 1
C1 = 1
C2 = 1
C3 = 1
C4 = 1
C5 = 1
for (i in 1:2) {
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
}
c(C0, C1, C2, C3, C4, C5)
C0=round(C0,6);C1=round(C1,6);C2=round(C2,6);C3=round(C3,6);C4=round(C4,6);C5=round(C5,6)
c(C0, C1, C2, C3, C4, C5)
max_likelihood = nlminb(start = C5, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C4 = C4, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C5 = max_likelihood$par
max_likelihood = nlminb(start = C4, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C2 = C2,
C3 = C3, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C4 = max_likelihood$par
max_likelihood = nlminb(start = C0, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C1 = C1, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C0 = max_likelihood$par
max_likelihood = nlminb(start = C1, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C2 = C2, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C1 = max_likelihood$par
max_likelihood = nlminb(start = C2, objective = minus_loglikelihood_function,
lower = 0, upper = Inf, C0 = C0, C1 = C1, C3 = C3,
C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C2 = max_likelihood$par
max_likelihood = nlminb(start = C3, objective = minus_loglikelihood_function,
lower = -Inf, upper = Inf, C0 = C0, C1 = C1,
C2 = C2, C4 = C4, C5 = C5, nsubject=nsubject, grid=grid, WaveletCoefficientMatrix=WaveletCoefficientMatrix)
C3 = max_likelihood$par
c(C0, C1, C2, C3, C4, C5)
diag(2)
diag(2)[1,]
diag(2)[1,,drop=F]
library(BHMSMAfMRI)
set.seed(1)
nsubject <- 3
grid <- 8
ntime <- 4
Data <- array(rnorm(3*8*8*4),dim=c(3,8,8,4))
DesignMatrix <- cbind(c(1,0,1,0), c(1,1,1,1))
analysis <- "multi"
BHMSMA.multi <- BHMSMA(nsubject, grid, Data, DesignMatrix, TrueCoeff=NULL, analysis)
sum(BHMSMAmulti$GLMCoeffStandardized)
sum(BHMSMA.multi$GLMCoeffStandardized)
BHMSMA.multi$hyperparam
sum(BHMSMA.multi$WaveletCoefficientMatrix)
sum(BHMSMA.multi$GLMcoeffposterior)
dim(BHMSMA.multi$GLMcoeffposterior)
sum(BHMSMA.multi$GLMcoeffposterior)
remove.packages("BHMSMAfMRI1")
?CGEN::CGEN
library(BHMSMAfMRI)
set.seed(1)
n <- 3
grid <- 8
ntime <- 4
data <- array(rnorm(n*grid*grid*ntime),
dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0))
k <- 2
analysis <- "multi"
BHMSMAmulti <- BHMSMA(n, grid, data, designmat,
k, analysis)
if(!is.matrix(designmat)) stop("designmat must be a matrix")
if(n!=nrow(data)) stop(cat("data doesn't have n=",n," rows.\n"))
if(ncol(designmat)==1) cat("Warning: designmat has only one column. The function doesn't add any intercept column by itself.")
if(k > ncol(designmat)) stop("Fix the input k.")
glmmap = glmcoef(n, grid, data, designmat)
wavecoefglmmap = waveletcoef(n, grid, glmmap$GLMCoefStandardized[,,,k], wave.family, filter.number, bc)
wavecoefglmmap = waveletcoef(n, grid, glmmap$GLMCoefStandardized[,,,k])
hyperest = hyperparamest( n, grid, wavecoefglmmap$WaveletCoefficientMatrix, analysis )
dim(wavecoefglmmap$WaveletCoefficientMatrix)
waveletcoefmat = wavecoefglmmap$WaveletCoefficientMatrix
C0 = C1 = C2 = C3 = C4 = C5 = 1
max_likelihood = nlminb(start = C5, objective=minus_ll, lower=0, upper=Inf, C0=C0, C1=C1, C2=C2, C3=C3, C4=C4, subs=1:n, grid=grid, waveletcoefmat=waveletcoefmat)
sourceCpp("/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-01-fMRI/R_package/Version_2.0/BHMSMAfMRI/src/BHMSMA.cpp")
max_likelihood = nlminb(start = C5, objective=minus_ll, lower=0, upper=Inf, C0=C0, C1=C1, C2=C2, C3=C3, C4=C4, subs=1:n, grid=grid, waveletcoefmat=waveletcoefmat)
n <- 3
grid <- 8
ntime <- 4
data <- array(rnorm(n*grid*grid*ntime),
dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0))
k <- 2
analysis <- "multi"
BHMSMAmulti <- BHMSMA(n, grid, data, designmat,
k, analysis)
library(BHMSMAfMRI)
n <- 3
grid <- 8
ntime <- 4
data <- array(rnorm(n*grid*grid*ntime),
dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0))
k <- 2
analysis <- "multi"
BHMSMAmulti <- BHMSMA(n, grid, data, designmat,
k, analysis)
set.seed(1)
n <- 3
grid <- 8
ntime <- 10
designmat <- cbind(rep(1,10),c(rep(c(1,0),5)))
data <- array(dim=c(n,grid,grid,ntime),
rnorm(n*grid*grid*ntime))
glm.fit <- glmcoef(n,grid,data,designmat)
dim(glm.fit$GLMCoefStandardized)
library(BHMSMAfMRI)
set.seed(1)
n <- 15
grid <- 64
ntime <- 100
data <- array(rnorm(n*grid*grid*ntime),
dim=c(n,grid,grid,ntime))
designmat <- cbind(rep(1,ntime),runif(ntime))
k <- 2
analysis <- "multi"
system.time({BHMSMAmulti <- BHMSMA(n,grid,data,
designmat,k,analysis)})
set.seed(1)
n <- 3
grid <- 8
ntime <- 4
data <- array(rnorm(n*grid*grid*ntime),
dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0))
k <- 2
analysis <- "multi"
BHMSMAmulti <- BHMSMA(n, grid, data, designmat,
k, analysis)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized)))
par(mfrow=c(1,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
devtools::install_github("nilotpalsanyal/BHMSMAfMRI", build_vignettes = T)
devtools::install_github("nilotpalsanyal/BHMSMAfMRI", build_vignettes = T, force=T)
set.seed(1)
n <- 3
grid <- 8
ntime <- 4
data <- array(rnorm(n*grid*grid*ntime),
dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0))
k <- 2
analysis <- "multi"
BHMSMAmulti <- BHMSMA(n, grid, data, designmat,
k, analysis)
library(BHMSMAfMRI)
set.seed(1)
n <- 3
grid <- 8
ntime <- 4
data <- array(rnorm(n*grid*grid*ntime),
dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0))
k <- 2
analysis <- "multi"
BHMSMAmulti <- BHMSMA(n, grid, data, designmat,
k, analysis)
names(BHMSMAmulti)
library(rmarkdown)
?pandoc_citeproc
??pandoc_citeproc
remotes::install_github('rstudio/rmarkdown')
?render_site
?rmarkdown::render_site
?usethis
library(usethis)
?usethis
setwd("/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-01-fMRI/R_package/Version_2.0/BHMSMAfMRI/")
use_github_action("check-release")
devtools::install_github("nilotpalsanyal/BHMSMAfMRI", build_vignettes = TRUE)
