ntime <- 4  #number of timepoints
data <- array(rnorm(n*grid*grid*ntime), dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0)) #intercept must be included if wanted
k <- 2  #regressor of interest
analysis <- "multi"     #perform multi-subject analysis
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis)
analysis <- "single"     #perform single subject analysis
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis)
BHMSMAmulti$hyperparam
BHMSMAsingle$hyperparam
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized)))
par(mfrow=c(1,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
par(mfrow=c(2,2))
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized)))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
set.seed(1)
n <- 3    #number of subjects
grid <- 8   #total number of voxels is grid^2
ntime <- 4  #number of timepoints
data <- array(rnorm(n*grid*grid*ntime), dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0)) #intercept must be included if wanted
k <- 2  #regressor of interest
analysis <- "multi"     #perform multi-subject analysis
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis)
analysis <- "single"     #perform single subject analysis
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized)))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized)))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
set.seed(1)
n <- 3    #number of subjects
grid <- 16   #total number of voxels is grid^2
ntime <- 4  #number of timepoints
data <- array(rnorm(n*grid*grid*ntime), dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0)) #intercept must be included if wanted
k <- 2  #regressor of interest
analysis <- "multi"     #perform multi-subject analysis
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis)
analysis <- "single"     #perform single subject analysis
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized)))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
zlim
set.seed(1)
n <- 10    #number of subjects
grid <- 16   #total number of voxels is grid^2
ntime <- 4  #number of timepoints
data <- array(rnorm(n*grid*grid*ntime), dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0)) #intercept must be included if wanted
k <- 2  #regressor of interest
analysis <- "multi"     #perform multi-subject analysis
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis)
analysis <- "single"     #perform single subject analysis
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized)))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
BHMSMAmulti$hyperparam
zlim
set.seed(1)
n <- 10    #number of subjects
grid <- 16   #total number of voxels is grid^2
ntime <- 4  #number of timepoints
data <- array(rnorm(n*grid*grid*ntime), dim=c(n,grid,grid,ntime))
designmat <- cbind(c(1,1,1,1),c(1,0,1,0)) #intercept must be included if wanted
k <- 2  #regressor of interest
analysis <- "multi"     #perform multi-subject analysis
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis)
analysis <- "single"     #perform single subject analysis
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[,,,k])))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
BHMSMAmulti$GLMCoefStandardized[,,,k]
max(abs(BHMSMAmulti$GLMCoefStandardized[,,,k]))
max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]))
max(abs(BHMSMAmulti$GLMCoefStandardized[2,,,k]))
max(abs(BHMSMAmulti$GLMCoefStandardized[3,,,k]))
sapply(1:n, function(k)max(abs(BHMSMAmulti$GLMCoefStandardized[3,,,k])) )
sapply(1:n, function(i) max(abs(BHMSMAmulti$GLMCoefStandardized[i,,,k])) )
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k])))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
fpath <- system.file("extdata", package="BHMSMAfMRI")
untar(paste0(fpath,"/fmridata.tar"), exdir=tempdir())
n <- 3
grid <- 32
ntime <- 9
data <- array(dim=c(n,grid,grid,ntime))
for(subject in 1:n)
{
directory <- paste0(tempdir(),"/fmridata","/s0",subject,"/")
a <- readfmridata(directory, format="Analyze", prefix=paste0("s0",subject,"_t"),
nimages=9, dim.image=c(grid,grid,1))
data[subject,,,] <- a[,,1,]
}
dim(a)
data(fmridata)
names(fmridata)
truecoef <- fmridata$TrueCoeff
designmat <- fmridata$DesignMatrix
BHMSMAoutput.multi <- BHMSMA ( n, grid, data, designmat, k, "multi",
truecoef )
names(BHMSMAoutput.multi)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k])))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
BHMSMAoutputmulti <- BHMSMA ( n, grid, data, designmat, k, "multi",
truecoef )
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k])))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
BHMSMAmulti <- BHMSMA ( n, grid, data, designmat, k, "multi",
truecoef )
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k])))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k])))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="GLM coef posterior map")
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[,,,k])))
par(mfrow=c(2,2))
image( abs(BHMSMAmulti$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="GLM coef posterior map")
max
zlim
fpath <- system.file("extdata", package="BHMSMAfMRI")
untar(paste0(fpath,"/fmridata.tar"), exdir=tempdir())
n <- 3
grid <- 32
ntime <- 9
data <- array(dim=c(n,grid,grid,ntime))
for(subject in 1:n)
{
directory <- paste0(tempdir(),"/fmridata","/s0",subject,"/")
a <- readfmridata(directory, format="Analyze", prefix=paste0("s0",subject,"_t"),
nimages=9, dim.image=c(grid,grid,1))
data[subject,,,] <- a[,,1,]
}
analysis <- "multi"     #perform multi-subject analysis
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis)
analysis <- "single"     #perform single subject analysis
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis)
designmat
fmridata$DesignMatrix
analysis <- "multi"     #perform multi-subject analysis
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis, truecoef)
analysis <- "single"     #perform single subject analysis
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis, truecoef)
BHMSMAmulti$MSE
truecoef
image( truecoef, col=heat.colors(12),zlim=zlim,main="GLM coef map")
dim(truecoef)
image( truecoef[1,,],col=heat.colors(12),zlim=zlim,main="GLM coef map")
range(truecoef)
image( truecoef[1,,],col=heat.colors(12),main="GLM coef map")
image( truecoef[1,,],col=heat.colors(12),main="GLM coef map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( truecoef[1,,],col=heat.colors(12),main="GLM coef map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( truecoef[1,,],col=heat.colors(12),main="GLM coef map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(12),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(12),zlim=zlim,main="GLM coef posterior map")
image( truecoef[1,,],col=heat.colors(12),main="GLM coef map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="GLM coef posterior map")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="GLM coef posterior map")
fpath <- system.file("extdata", package="BHMSMAfMRI")
untar(paste0(fpath,"/fmridata.tar"), exdir=tempdir())
n <- 3
grid <- 32
ntime <- 9
data <- array(dim=c(n,grid,grid,ntime))
for(subject in 1:n)
{
directory <- paste0(tempdir(),"/fmridata","/s0",subject,"/")
a <- readfmridata(directory, format="Analyze", prefix=paste0("s0",subject,"_t"),
nimages=9, dim.image=c(grid,grid,1))
data[subject,,,] <- a[,,1,]
}
data(fmridata)
names(fmridata)
truecoef <- fmridata$TrueCoeff
designmat <- fmridata$DesignMatrix
analysis <- "multi"     #perform multi-subject analysis (MSA)
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis, truecoef)
analysis <- "single"     #perform single subject analysis (SSA)
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis, truecoef)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k])))
par(mfrow=c(2,2))
image( truecoef[1,,],col=heat.colors(12),main="true map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="posterior map from SSA")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="posterior map from MSA")
image( truecoef[1,,],col=heat.colors(12),main="true map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="posterior map SSA")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="posterior map MSA")
image( truecoef[1,,],col=heat.colors(12),main="true map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(5),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(5),zlim=zlim,main="posterior map SSA")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(5),zlim=zlim,main="posterior map MSA")
fpath <- system.file("extdata", package="BHMSMAfMRI")
untar(paste0(fpath,"/fmridata.tar"), exdir=tempdir())
n <- 3
grid <- 32
ntime <- 9
data <- array(dim=c(n,grid,grid,ntime))
for(subject in 1:n)
{
directory <- paste0(tempdir(),"/fmridata","/s0",subject,"/")
a <- readfmridata(directory, format="Analyze", prefix=paste0("s0",subject,"_t"),
nimages=9, dim.image=c(grid,grid,1))
data[subject,,,] <- a[,,1,]
}
data(fmridata)
names(fmridata)
truecoef <- fmridata$TrueCoeff
designmat <- fmridata$DesignMatrix
analysis <- "multi"     #perform multi-subject analysis (MSA)
BHMSMAmulti <- BHMSMA(n, grid, data, designmat, k, analysis, truecoef)
analysis <- "single"     #perform single subject analysis (SSA)
BHMSMAsingle <- BHMSMA(n, grid, data, designmat, k, analysis, truecoef)
zlim = c(0,max(abs(BHMSMAmulti$GLMCoefStandardized[1,,,k])))
par(mfrow=c(2,2))
image( truecoef[1,,],col=heat.colors(12),main="true map")
image( abs(BHMSMAsingle$GLMCoefStandardized[1,,,k]),
col=heat.colors(8),zlim=zlim,main="GLM coef map")
image( abs(BHMSMAsingle$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="posterior map SSA")
image( abs(BHMSMAmulti$GLMcoefposterior[1,,]),
col=heat.colors(8),zlim=zlim,main="posterior map MSA")
build_readme()
build_readme()
build_home()
build_readme()
build_home()
build_readme()
build_home()
build_readme()
build_home()
build_readme()
build_home()
use_github_actions()
build_readme()
build_home()
use_github_actions()
.Last.error.trace
?use_github_actions
use_github_actions_badge(name = "R-CMD-check.yaml", repo_spec = NULL)
use_github_actions()
git_sitrep() # git situation report
gh_token_help()
create_github_token()
?create_github_token
gitcreds_set()
gitcreds::gitcreds_set()
gitcreds_set()
gitcreds::gitcreds_set()
use_github_actions()
build_readme()
build_home()
usethis::git_sitrep()
usethis::git_sitrep()
?git_sitrep
git_vaccinate()
?credentials::git_credentials_forget
?credentials::git_credential_forget
git_sitrep()
use_github_action()
?use_github_action
use_github_action("check-standard")
version
install_deps(dependencies = TRUE)
1
install_deps(dependencies = TRUE)
?install_deps
??rcmdcheck
rcmdcheck::rcmdcheck
?rcmdcheck::rcmdcheck
rcmdcheck()
rcmdcheck("/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-01-fMRI/R_package/Version_2.0/BHMSMAfMRI_2.0.tar.gz")
rcmdcheck::rcmdcheck("/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-01-fMRI/R_package/Version_2.0/BHMSMAfMRI_2.0.tar.gz")
rcmdcheck::rcmdcheck("/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-01-fMRI/R_package/Version_2.0/BHMSMAfMRI_2.0.tar.gz")
detach("package:BHMSMAfMRI", unload = TRUE)
getwd()
build_site()
?find_prog
??find_prog
?glmnet::glmnet
getwd()
library(rmarkdown)
render("vignettes/BHMSMAfMRIvignette.Rmd")
install.packages("bookdown")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
ls()
ls()
names(a)
ls()
names(BHMSMAmulti)
t(names(BHMSMAmulti))
cat(names)
cat(names(BHMSMAmulti))
cat(t(names(BHMSMAmulti)))
names(BHMSMAmulti)
names(BHMSMAmulti)
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
ls()
str(postglmmap)
?str
?str
render("vignettes/BHMSMAfMRIvignette.Rmd")
str(postglmmap)
str(postglmmap,vec.len = 3)
str(postglmmap,vec.len = 2)
str(postglmmap,vec.len = 3)
str(postglmmap,vec.len = 3, digits.d = 3)
str(postglmmap,vec.len = 2, digits.d = 3)
str(postglmmap,vec.len = 2.5, digits.d = 3)
str(postglmmap,vec.len = 2.5, digits.d = 3, nchar.max = 100)
str(postglmmap,vec.len = 2.5, digits.d = 3, nchar.max = 30)
str(postglmmap,vec.len = 3, digits.d = 3)
str(postglmmap,vec.len = 3, digits.d = 2)
render("vignettes/BHMSMAfMRIvignette.Rmd")
getwd()
build_site()
.Last.error
render("vignettes/BHMSMAfMRIvignette.Rmd")
.Last.error
library(rmarkdown)
build_site()
rm(list=ls())
?lm
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
render("vignettes/BHMSMAfMRIvignette.Rmd")
build_site()
build_site()
?devtools
build_vignettes()
build_vignettes()
